// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model users {
  id                Int                 @id @default(autoincrement())
  email             String              @unique
  password          String
  role              Role                @default(USER)
  doctor            doctors?
  answers           answers[]
  city              cities              @relation(fields: [cityId], references: [id])
  cityId            Int
  requests          requests[]
}

model doctors {
  id                Int                 @id @default(autoincrement())
  user              users               @relation(fields: [userId], references: [id])
  userId            Int                 @unique
  Answer            answers[]
  service           String
}

model requests {
  id                Int                 @id @default(autoincrement())
  answer            answers?            @relation(fields: [answerId], references: [id])
  answerId          Int?                @unique
  service           String
  city              cities              @relation(fields: [cityId], references: [id])
  cityId            Int                 @unique
  isAccepted        Boolean
  user              users[]
}

model answers {
  id                 Int                @id @default(autoincrement())
  doctor             doctors            @relation(fields: [doctorId], references: [id])
  doctorId           Int                @unique
  start_date         DateTime
  end_date           DateTime
  seats              Int
  patients           users[]
  Request            requests[]
}

model cities {
  id                  Int                @id @default(autoincrement())
  postal              Int
  name                String
  x                   Int
  y                   Int
  Request             requests[]
  User                users[]
}

enum Role {
  USER
  ADMIN
  DOCTOR
}